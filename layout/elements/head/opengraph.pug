-
  let excerpt = page.__post ? (page.excerpt && page.excerpt.replace(/\>\</g, '> <')) || page.content.substr(0, 500).replace(/\>\</g, '> <') || `` : ``;
-
  let meta_description = ``;
  if(is_home())
    meta_description = config.description || ``;
  else if(is_category())
    meta_description = `'${page.category}'에 해당하는 글 목록`;
  else if(is_tag())
    meta_description = `'${page.tag}'와(과) 관련 된 글 목록`;
  else if(is_archive())
    if(is_month())
      meta_description = date(`${page.year}-${page.month}`, 'YYYY-MM') + `에 작성된 글 목록`;
    else if(is_year())
      meta_description = `${page.year}년에 작성된 글 목록`;
    else
      meta_description = `글 목록`;
  else
    meta_description = page.seo && page.seo.description || excerpt || config.description || ``;
  meta_description = strip_html(meta_description).replace(/\n/g, ' ').replace(/^\s*\t*|\s*\t*$/g, '');
-
  const openGraph = open_graph({
    description: strip_html(meta_description).replace(/\n/g, ''),
    author: page.seo && page.seo.author || config.author,
    image: _.compact([
      page.seo && typeof page.seo.image === 'object' && page.seo.image.url && resolve_url(page.seo.image.url),
      page.seo && typeof page.seo.image === 'string' && page.seo.image && resolve_url(page.seo.image),
      page.hero && typeof page.hero === 'object' && page.hero.url && resolve_url(page.hero.url),
      page.hero && typeof page.hero === 'string' && page.hero && resolve_url(page.hero),
      theme.hero && theme.hero.url && resolve_url(theme.hero.url),
    ]),
    fb_app_id: theme.facebook,
    fb_admins: theme.fb_admin,
    twitter_id: theme.twitter,
    google_plus: theme.google_plus,
    url: page.permalink,
    title: page.title || title
  });

| !{ openGraph }